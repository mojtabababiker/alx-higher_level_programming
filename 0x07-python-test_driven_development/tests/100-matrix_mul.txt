"""
=============================
 This is a test suit for the
      100-matrix_mul.py
==============================

>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

    /matrix_mul takes two List of Lists and multiply
    	them in `Doted product (M1 . M2)`
	        and return the result/

]case 0
>>> m1 = "This is not list"
>>> m2 = [[1, 2, 3], [6, 4, 3]]
>>> matrix_mul(m1, m2) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> matrix_mul(m2, m1) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: m_b must be a list

=================================================
]case 1
>>> m1 = [1, 2, 3]
>>> m2 = [[5, 4, 5], [3, 5, 6], [4, 6, 8]]
>>> matrix_mul(m1, m2) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> matrix_mul(m2, m1) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

==================================================
]case 2
>>> m1 = [[]]
>>> m2 = [[5, 4, 5], [3, 5, 6], [4, 6, 8]]
>>> matrix_mul(m1, m2) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul(m2, m1) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
ValueError: m_b can't be empty

==================================================
]case 3
>>> m1 = [[1, 2, 3], [3, "a", 4]]
>>> m2 = [[5, 4, 5], [3, 5, 6], [4, 6, 8]]
>>> matrix_mul(m1, m2) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> matrix_mul(m2, m1) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

===================================================
]case 4
>>> m1 = [[1, 2], [2, 3], [8, 6, 4, 3]]
>>> m2 = [[5, 4, 5], [3, 5, 6]]
>>> matrix_mul(m1, m2) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> matrix_mul(m2, m1) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

===================================================
]case 5
>>> m1 = [[1, 2, 3, 4], [11, 22, 33, 44], [5, 4, 2, 1]]
>>> m2 = [[5, 4, 5], [3, 5, 6]]
>>> matrix_mul(m1, m2) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

===================================================
]case 6
>>> m1 = [[1, 2, 3], [4, 5, 6]]
>>> m2 = [[7, 8], [9, 10], [11, 12]]
>>> matrix_mul(m1, m2)
[[58, 64], [139, 154]]
